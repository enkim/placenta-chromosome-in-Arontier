#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jul  8 14:32:35 2020

@author: Kimeunna
"""


#Polygon 만들기 with CV2 

import numpy as np


import cv2 as cv

width=640
height=640
bpp=3 

# 모든 픽셀값이 0으로 초기화된 이미지를 생성하여 여기에 폴리곤을 그림 
img=np.zeros((height,width,bpp),np.uint8)

# 색깔별로 튜플객체 생성함 튜플ㅇ릐 값은 B,G,R 인게 중요! 
red=(0,0,255)
green=(0,255,0)
blue=(255,0,0)
white=(255,255,255)
yellow=(255,255,0)
cyan=(255,255,0)
magenta=(255,0,255)

thickness=2

"""
cv.polylines 함수는 이미지(ndarray 객체) img 에 폴리곤 외곽선을 그림 
img=cv.polylines
(img: 폴리곤이 그려질 이미지
pts, 폴리곤을 구성하는 정점(veryes) 이 저장되어 있는 배열 <=이게 중요! 
isClosed, pts 의 첫번째 정점과 마지막 정점을 연결할지 여부
color, 폴리곤의 색
아래는 생략가능
thickness, 디폴트값1
lineType, 디폴트값 cv.LINE_8(=8-connectedline)
shift)디폴트값0 
"""

pts=np.array([[315,50],[570,240],[475,550],[150,550],[50,240]],np.int32)
pts=pts.reshape((-1,1,2))
cv.polylines(img,[pts],False,green,thickness)

pts=np.array([[315,160],[150,280],[210,480],[420,480],[480,280]],np.int32)
pts=pts.reshape((-1,1,2))
cv.polylines(img,[pts],True,green,thickness)

"""
cv.fillPoly 함수는 이미지(ndarry 객체) img 내부가 채워진 폴리곤을 그림. 
cv.polylines 함수는 pts 에 저장되어 있는 정점을 사용하여 이미지img 에 폴리곤을 그림.  

img=cv.fillpoly(  
img, 폴리곤이 그려질 이미지
pts, 폴리곤을 구성하는 정점(veryes) 이 저장되어 있는 배열
color, 폴리곤의 색
lineType, 디폴트값 cv.LINE_8(=8-connected line)
shift,디폴트값 0
offset) 모든 정점에 적용되는 오프셋 

np.array 함수를 사용하여 시계방향으로 다섯개의 정점에 대한 2차원 좌표를 배열에 저장함.  
shape 이 (5,2) 인 nd array 객체가 생성됨.  
ndarray 객체의 shape 를 (-1,1,2)로 변경하면 (5,1,2)인 ndarray 객체로 변경됨?
shape 에서 -1 로 적은 차원은 자동으로 계산되어 입력됨? 


"""


pts=np.array([[320,245],[410,315],[380,415],[265,415],[240,315]],np.int32)


pts=pts.reshape((-1,1,2))
cv.fillPoly(img,[pts],yellow)

# 윈도우창 "drawing" 에 이미지를 보여줌.  
cv.imshow("drawing",img)
cv.waitKey(0);
cv.destroyAllWindows()
