#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jul 20 09:52:15 2020
@author: Kimeunna
"""
import os
import numpy as np
import cv2
import matplotlib.pyplot as plt
from skimage import io
plt.interactive(True)

# original size img_size=(93970,234042)
# downsize (939,2340)
# Working Directory 설정
work_path = "/Users/Kimeunna/Dropbox/Python_ex/opencv_ex"
os.chdir(work_path)

# ========================================================================
# polygon 안에 색으로 채우기
txtfile_path = "12-S -091120-1.txt"
f = open(txtfile_path, 'r', encoding='UTF-8')
xylist = []
xyrowlist = [] # polygon 좌표 list

i = 0
for row in f:
    if '/Volumes' in row:
        wsi_path = row
        continue
    elif '[Point:' in row:
        xy = row.split(', Point:')
        xy[0] = (xy[0].lstrip('[Point: '))
        xy[-1] = xy[-1].strip()
        xy[-1] = xy[-1].rstrip(']')
        for xystring in xy:
            xloc = int(round(float(xystring.split(',')[0])/100))
            yloc = int(round(float(xystring.split(',')[1])/100))
            xyloc = [xloc, yloc]
            xylist.append(xyloc)
        xyrowlist.append(xylist)
        i = + 1
        xylist = []

# 축소된 사각형에 일정 간격으로 좌표 만들기
# downsize 939,2340
width = 939
height = 2340

xypointlist = [] # 격자 생성
x=np.arange(939)
y=np.arange(2340)
for i in range(939):
    for j in range(2340):
        xypoint = [x[i],y[j]]
        xypointlist.append(xypoint)
# print(xypointlist)

# fill poly into map
# xypoinlist : 격자
# xyrowlist : polygon => polygon
# point_i_list: 격자 중 polygon 안

slide_map = np.zeros((2340, 939))
intr_coords = slide_map.copy()
i = 0
for i in range(len(xyrowlist)):
    cv2.fillPoly(slide_map, [np.array(xyrowlist[i])],1)
    i = i + 1
plt.imshow(slide_map)

# make intr. coords map 전부 1로 채워준다
intr_coords = slide_map.copy()
for i in xypointlist:
    y, x = i
    intr_coords[x,y] = 1

# sum,  value == 2 equal coords exist in polygon area
result = slide_map + intr_coords
print(result==2)
plt.imshow(result == 2)

# polygon 들 안에 있는 점 뽑기
point_start = np.argwhere(result==2).tolist()
print(point_start)

# 추출한 poinst 가 맞는지 확인해봄
a= np.argwhere(result==2).tolist()
slide_map = np.zeros((2340, 939))
intr_coords = slide_map.copy()
for i in a:
    x, y = i
    intr_coords[x,y] = 1 
plt.imshow(intr_coords)

"""
# 이 좌표가 polygon 안에 있는지 확인하기 for 문 사용
from shapely.geometry import Point, Polygon
point_i_list = []
for j in xyrowlist:
    area_j_poly = Polygon(xyrowlist[xyrowlist.index(j)])
    # print(area_j_poly)
    for i in xypointlist:
        point_i = Point(i)
        if point_i.within(area_j_poly) == True:
            point_i_list.append(i)
b = point_i_list
slide_map = np.zeros((2340, 939))
intr_coords = slide_map.copy()
for i in b:
    x, y = i
    intr_coords[y,x] = 1 
plt.imshow(intr_coords)
"""
